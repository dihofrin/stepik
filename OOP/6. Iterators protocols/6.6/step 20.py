"""
https://stepik.org/lesson/934146/step/20?unit=940038

Контекстный менеджер safe_open
Реализуйте контекстный менеджер safe_open с помощью декоратора @contextmanager, который принимает два аргумента в следующем порядке:

filename — имя файла
mode — режим открытия файла (r, w, a и так далее), по умолчанию имеет значение r
Контекстный менеджер должен открывать файл с именем filename в режиме mode и позволять выполнять с ним соответствующие операции. Причем если открытие файла было выполнено без исключений, в качестве значения, используемого в блоке with, контекстный менеджер должен вернуть кортеж из двух элементов, первым из которых является необходимый файловый объект, вторым — значение None. Однако если при открытии файла было возбуждено исключение, то в качестве значения, используемого в блоке with, контекстный менеджер должен вернуть кортеж из двух элементов, первым из которых является значение None, вторым — возбужденное при открытии исключение. Также контекстный менеджер должен закрывать открытый им файл после выполнения кода внутри блока with.
"""

from contextlib import contextmanager

@contextmanager
def safe_open(filename, mode='r'):
    try:
        f = open(filename, mode)
        yield f, None
        f.close()
    except Exception as error:
        yield None, error