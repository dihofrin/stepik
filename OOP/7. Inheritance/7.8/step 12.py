"""
https://stepik.org/lesson/804638/step/12?unit=807762

Класс Queue
Реализуйте класс Queue, описывающий очередь, элементами которой являются пары ключ: значение. При создании экземпляра класс должен принимать один аргумент:

pairs — список или словарь, определяющий начальный набор элементов очереди. Порядок элементов в очереди должен совпадать с их порядком в переданном итерируемом объекте. Если не передан, очередь считается пустой
Класс Queue должен иметь два метода экземпляра:

add() — метод, принимающий в качестве аргумента элемент и добавляющий его в конец очереди. Элементом в данном случае является двухэлементный кортеж, содержащий ключ и значение. Если в очереди уже содержится элемент с указанным ключом, он должен быть перенесен в конец очереди, а его значение должно быть обновлено
pop() — метод, удаляющий из очереди первый элемент и возвращающий его. Элементом в данном случае является двухэлементный кортеж, содержащий ключ и значение. Если очередь пуста, должно быть возбуждено исключение KeyError с текстом:
Очередь пуста
Экземпляр класса Queue должен иметь следующее формальное строковое представление:

Queue([(<ключ 1-го элемента>, <значение 1-го элемента>), (<ключ 2-го элемента>, <значение 2-го элемента>), ...])
При передаче экземпляра класса Queue в функцию len() должно возвращаться количество элементов в нем.
"""

class Queue:

    def __init__(self, pairs=()):
        self.pairs = list(pairs)

    def add(self, el):
        keys = [item[0] for item in self.pairs]
        if el[0] in keys:
            del self.pairs[keys.index(el[0])]
        self.pairs.append(el)
        
    def pop(self):
        if self.pairs:
            return self.pairs.pop(0)
        raise KeyError('Очередь пуста')

    def __repr__(self):
        return f'{type(self).__name__}({self.pairs})'

    def __len__(self):
        return len(self.pairs)