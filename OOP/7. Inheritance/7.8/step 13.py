"""
https://stepik.org/lesson/804638/step/13?unit=807762

–ö–ª–∞—Å—Å—ã Lecture –∏ Conferenceüå∂Ô∏è
1. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Lecture, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç—Ä–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

topic ‚Äî —Ç–µ–º–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è
start_time ‚Äî –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
duration ‚Äî –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
2. –¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Conference, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é, –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å—é –≤ –æ–¥–∏–Ω –¥–µ–Ω—å. –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –Ω–∞–±–æ—Ä –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∏–∫–∞–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

–ö–ª–∞—Å—Å Conference –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —á–µ—Ç—ã—Ä–µ –º–µ—Ç–æ–¥–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

add() ‚Äî –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª—è—é—â–∏–π –µ–≥–æ –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é. –ï—Å–ª–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç—Å—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –¥—Ä—É–≥–∏–º–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è–º–∏, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–æ–∑–±—É–∂–¥–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ValueError —Å —Ç–µ–∫—Å—Ç–æ–º:
–ü—Ä–æ–≤–µ—Å—Ç–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ
total() ‚Äî –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π —Å—É–º–º–∞—Ä–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
longest_lecture() ‚Äî –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∞–º–æ–≥–æ –¥–æ–ª–≥–æ–≥–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
longest_break() ‚Äî –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∞–º–æ–≥–æ –¥–æ–ª–≥–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ –º–µ–∂–¥—É –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è–º–∏ –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü–µ—Ä–µ—Ä—ã–≤ –º–µ–∂–¥—É –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è–º–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–ª–µ–≤—ã–º. –î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –æ–¥–Ω–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ 12:00, –∞ –¥—Ä—É–≥–æ–µ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –≤ 12:00.

"""


class Lecture:
    def __init__(self, topic, start_time, duration):
        self.topic = topic
        self.start_time = start_time
        self.duration = duration


class Conference:

    def __init__(self):
        self.conferences = []
        self.blocked_time = []

    @staticmethod
    def time_to_int(time):
        hours, minutes = time.split(':')
        return int(hours) * 60 + int(minutes)

    @staticmethod
    def int_to_time(time):
        hours = time // 60
        minutes = time % 60
        return str(hours).zfill(2) + ':' + str(minutes).zfill(2)

    def time_to_range(self, start_time, duration):
        start = self.time_to_int(start_time)
        end = self.time_to_int(duration)
        return range(start, start+end)

    def block_time(self, timerange):
        self.blocked_time.append(timerange)

    def add(self, performance):
        check_range = self.time_to_range(performance.start_time, performance.duration)
        for time_range in self.blocked_time:
            if set(time_range).intersection(set(check_range)):
                raise ValueError('–ü—Ä–æ–≤–µ—Å—Ç–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ')
        self.conferences.append(performance)
        self.block_time(check_range)

    def total(self):
        total_duration = sum(self.time_to_int(item.duration) for item in self.conferences)
        return self.int_to_time(total_duration)

    def longest_lecture(self):
        longest_lecture = max(self.time_to_int(item.duration) for item in self.conferences)
        return self.int_to_time(longest_lecture)

    def longest_break(self):
        starts = sorted([self.time_to_int(i.start_time) for i in self.conferences], reverse=True)
        ends = sorted([(self.time_to_int(i.start_time) + self.time_to_int(i.duration)) for i in self.conferences], reverse=True)
        longest_break = max([starts[i]-ends[i+1] for i in range(len(starts)-1)])
        return self.int_to_time(longest_break)
