"""
https://stepik.org/lesson/798679/step/12?unit=801642

Классы MinStat, MaxStat и AverageStat
1. Реализуйте класс MinStat, описывающий объект, который находит минимальное значение среди определенного набора чисел. При создании экземпляра класс должен принимать один аргумент:

iterable — итерируемый объект, определяющий начальный набор чисел. Если не передан, начальный набор считается пустым
Класс MinStat должен иметь три метода экземпляра:

add() — метод, принимающий в качестве аргумента число и добавляющий его в набор
result() — метод, возвращающий минимальное число из набора. Если набор пуст, метод должен вернуть значение None
clear() — метод, удаляющий из набора все числа
2. Также реализуйте класс MaxStat, описывающий объект, который находит максимальное значение среди определенного набора чисел. При создании экземпляра класс должен принимать один аргумент:

iterable — итерируемый объект, определяющий начальный набор чисел. Если не передан, начальный набор считается пустым
Класс MaxStat должен иметь три метода экземпляра:

add() — метод, принимающий в качестве аргумента число и добавляющий его в набор
result() — метод, возвращающий максимальное число из набора. Если набор пуст, метод должен вернуть значение None
clear() — метод, удаляющий из набора все числа
3. Наконец, реализуйте класс AverageStat, описывающий объект, который находит среднее арифметическое определенного набора чисел. При создании экземпляра класс должен принимать один аргумент:

iterable — итерируемый объект, определяющий начальный набор чисел. Если не передан, начальный набор считается пустым
Класс AverageStat должен иметь три метода экземпляра:

add() — метод, принимающий в качестве аргумента число и добавляющий его в набор
result() — метод, возвращающий среднее арифметическое набора чисел. Если набор пуст, метод должен вернуть значение None
clear() — метод, удаляющий из набора все числа
"""


class Stat:
    def __init__(self, iterable=()):
        self.iterable = list(iterable)

    def add(self, n):
        self.iterable.append(n)

    def clear(self):
        self.iterable.clear()

class MinStat(Stat):

    def result(self):
        return min(self.iterable, default=None)

class MaxStat(Stat):

    def result(self):
        return max(self.iterable, default=None)


class AverageStat(Stat):

    def result(self):
        if self.iterable:
            return sum(self.iterable)/len(self.iterable)
        return None
