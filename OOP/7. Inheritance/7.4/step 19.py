"""
https://stepik.org/lesson/860444/step/19?unit=864459

Класс AdvancedList
Реализуйте класс AdvancedList, наследника класса list, описывающий список с дополнительным функционалом. Процесс создания экземпляра класса AdvancedList должен совпадать с процессом создания экземпляра класса list.

Класс AdvancedList должен иметь три метода экземпляра:

join() — метод, объединяющий все элементы экземпляра класса AdvancedList в строку и возвращающий полученный результат. Метод должен принимать один строковый аргумент, по умолчанию равный пробелу, который является разделителем элементов списка в результирующей строке
map() — метод, принимающий в качестве аргумента функцию func и применяющий ее к каждому элементу экземпляра класса AdvancedList. Метод должен изменять исходный экземпляр класса AdvancedList, а не возвращать новый
filter() — метод, принимающий в качестве аргумента функцию func и удаляющий из экземпляра класса AdvancedList те элементы, для которых функция func вернула значение False. Метод должен изменять исходный экземпляр класса AdvancedList, а не возвращать новый
"""

class AdvancedList(list):

    def join(self, sep=' '):
        return f'{sep}'.join(str(i) for i in self)

    def map(self, func):
        self[:] = [func(elem) for elem in self]
        return self

    def filter(self, func):
        self[:] = [elem for elem in self if func(elem)]
        return self

