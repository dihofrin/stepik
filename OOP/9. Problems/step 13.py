"""
https://stepik.org/lesson/864077/step/13?unit=923013

–ö–ª–∞—Å—Å MultiKeyDict üå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å MultiKeyDict, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–æ –≤—Å–µ–º –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –∫–ª–∞—Å—Å dict. –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ MultiKeyDict –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—é —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ dict:

multikeydict1 = MultiKeyDict(x=1, y=2, z=3)
multikeydict2 = MultiKeyDict([('x', 1), ('y', 2), ('z', 3)])

print(multikeydict1['x'])        # 1
print(multikeydict2['z'])        # 3
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å—é –∫–ª–∞—Å—Å–∞ MultiKeyDict –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –º–µ—Ç–æ–¥ alias(), –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –ø–æ–∑–≤–æ–ª—è—Ç—å –¥–∞–≤–∞—Ç—å –∏–º–µ—é—â–∏–º—Å—è –∫–ª—é—á–∞–º –ø—Å–µ–≤–¥–æ–Ω–∏–º—ã. –û–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É –ø—Å–µ–≤–¥–æ–Ω–∏–º—É –Ω–µ –¥–æ–ª–∂–Ω–æ –Ω–∏—á–µ–º –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –∫–ª—é—á—É, —Ç–æ –µ—Å—Ç—å —Å –º–æ–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞ —É –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–≤–∞ –∫–ª—é—á–∞ (–∏–ª–∏ –±–æ–ª—å—à–µ, –µ—Å–ª–∏ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ):

multikeydict = MultiKeyDict(x=100, y=[10, 20])

multikeydict.alias('x', 'z')     # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á—É 'x' –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞ 'z'
multikeydict.alias('x', 't')     # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á—É 'x' –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞ 't'
print(multikeydict['z'])         # 100
multikeydict['t'] += 1
print(multikeydict['x'])         # 101

multikeydict.alias('y', 'z')     # —Ç–µ–ø–µ—Ä—å 'z' —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º –∫–ª—é—á–∞ 'y'
multikeydict['z'] += [30]
print(multikeydict['y'])         # [10, 20, 30]
–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–º –ø–æ –ø—Å–µ–≤–¥–æ–Ω–∏–º—É –¥–∞–∂–µ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–ª—é—á –±—ã–ª —É–¥–∞–ª–µ–Ω:

multikeydict = MultiKeyDict(x=100)

multikeydict.alias('x', 'z')
del multikeydict['x']
print(multikeydict['z'])         # 100
–ö–ª—é—á–∏ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞–¥ –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞–º–∏. –ï—Å–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–ª—é—á –∏ –ø—Å–µ–≤–¥–æ–Ω–∏–º —Å–æ–≤–ø–∞–¥–∞—é—Ç, —Ç–æ –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –Ω–∏–º –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∏–º–µ–Ω–Ω–æ —Å –∫–ª—é—á–æ–º:

multikeydict = MultiKeyDict(x=100, y=[10, 20])

multikeydict.alias('x', 'y')
print(multikeydict['y'])         # [10, 20]
"""

from collections import UserDict

class MultiKeyDict(UserDict):

    def __init__(self, *args, **kwargs):
        self.aliases = {}
        super().__init__(*args, **kwargs)


    def alias(self, key, alias):
        self.aliases[alias] = key

    def __getitem__(self, item):
        if item in self.data:
            return self.data[item]
        return self.data[self.aliases[item]]


    def __setitem__(self, key, value):
        if key in self.aliases:
            self.data[self.aliases[key]] = value
        else:
            self.data[key] = value

    def __delitem__(self, key):
        if key in self.aliases.values():
            self.data['_' + key] = self.data[key]
            for k, v in self.aliases.items():
                if v == key:
                    self.aliases[k] = '_' + key
        del self.data[key]
