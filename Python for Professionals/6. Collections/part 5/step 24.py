"""
https://stepik.org/lesson/590035/step/24?unit=584967

Функция best_sender()
Рассмотрим два списка:

messages = ['Hi, Linda', 'Hi, Sam', 'How are you doing?']

senders = ['Sam Fisher', 'Linda', 'Sam Fisher']
Первый список представляет набор отправленных сообщений в некотором мессенджере, второй список — набор отправителей этих сообщений. Причем сообщение messages[i] отправлено пользователем senders[i]. Каждое сообщение представляет собой последовательность слов, разделенных пробелом (знаки препинания считаются частями слов). Количество слов — это общее число слов, отправленное пользователем. Обратите внимание, что каждый пользователь может отправлять более одного сообщения. Например, пользователь Sam Fisher отправил 22 слова в первом сообщении и 44 слова во втором, следовательно, его количество слов равно 2 + 4. Files = 62+4. Files=6. Collections.

Реализуйте функцию best_sender(), которая принимает два аргумента в следующем порядке:

messages — список сообщений
senders — список имен отправителей
Функция должна определять отправителя, имеющего наибольшее количество слов, и возвращать его имя. Если таких отправителей несколько, следует вернуть имя того, чье имя больше в лексикографическом сравнении.

Примечание 1. Гарантируется, что длины передаваемых в функцию списков совпадают.

Примечание 2. В тестирующую систему сдайте программу, содержащую только необходимую функцию best_sender(), но не код, вызывающий ее.
"""

from collections import defaultdict

def best_sender(messages, senders):
    d = defaultdict(int)
    for i in range(len(senders)):
        d[senders[i]] += len(messages[i].split(' '))
    #d = sorted(d, key=lambda x: (d.get, d[x]))
    return sorted(d, key=lambda x: (d.get, d[x]))[-1]