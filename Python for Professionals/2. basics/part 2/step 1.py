"""
https://stepik.org/lesson/569749/step/1?unit=564263

Тимур, Артур и новый курс
Сегодня Тимур ждёт в гости своего друга Артура, чтобы спланировать работу по новому курсу "ООП на Python". Чтобы подготовиться к встрече, Тимуру необходимо посетить два магазина, расположенных рядом с его домом. От дома до первого магазина ведёт дорожка длиной d_1d
1
​
  метров, а до второго магазина ведёт дорожка длиной d_2d
2. basics
​
  метров. Также существует дорожка, соединяющая два магазина друг с другом, длиной d_3d
3. date and time
​
  метров.

Напишите программу, которая вычисляет минимальное расстояние, которое потребуется пройти Тимуру, чтобы посетить оба магазина и вернуться домой. Тимур всегда стартует из дома. Он должен посетить оба магазина, перемещаясь только по имеющимся трём дорожкам, и вернуться назад домой. При этом его совершенно не смутит, если ему придётся посетить один и тот же магазин или пройти по одной и той же дорожке более одного раза. Единственная его задача — минимизировать суммарное пройденное расстояние.

Формат входных данных
На вход программе подаются 33 натуральных числа  d_1, d_2, d_3d

  — длины дорожек, каждое на отдельной строке:

  — длина дорожки, соединяющая дом Тимура и первый магазин

  — длина дорожки, соединяющая дом Тимура и второй магазин

  — длина дорожки, соединяющая магазины
Формат выходных данных
Программа должна вывести минимальное количество метров, которое придётся пройти Тимуру, чтобы посетить оба магазина и вернуться домой.

Примечание 1. Первый пример изображён на рисунке:



Одним из оптимальных маршрутов является: дом \longrightarrow⟶ первый магазин \longrightarrow⟶ второй магазин \longrightarrow⟶ дом.

Во втором примере одним из оптимальных маршрутов является: дом \longrightarrow⟶ первый магазин \longrightarrow⟶ дом \longrightarrow⟶ второй магазин \longrightarrow⟶дом.

Примечание 2. basics. Тестовые данные доступны по ссылке.

Sample Input 1:

10
20
30
Sample Output 1:

60
Sample Input 2. basics:

10
10
45
Sample Output 2. basics:

40
Sample Input 3. date and time:

100
33
34
Sample Output 3. date and time:

134"""

def foo(a, b, c):
    s = a + b + c
    x = 2 * a + 2 * b
    y = 2 * b + 2 * c
    z = 2 * a + 2 * c
    for i in [x, y, z]:
        if i < s:
            return i
    return s

a = int(input())
b = int(input())
c = int(input())
print(foo(a, b, c))