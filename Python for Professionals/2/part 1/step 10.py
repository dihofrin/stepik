"""
https://stepik.org/lesson/569748/step/10?unit=564262

Функция likes()
В различных социальных сетях существуют системы лайков, которые в зависимости от количества людей, оценивших запись, показывают соответствующую информацию.

Реализуйте функцию likes(), которая принимает один аргумент:

names — список имён
Функция должна возвращать строку в соответствии с примерами ниже, содержание которой зависит от количества имён в списке names.

Приведенный ниже код:

print(likes([]))
print(likes(['Тимур']))
print(likes(['Тимур', 'Артур']))
print(likes(['Тимур', 'Артур', 'Руслан']))
print(likes(['Тимур', 'Артур', 'Руслан', 'Анри']))
print(likes(['Тимур', 'Артур', 'Руслан', 'Анри', 'Дима']))
print(likes(['Тимур', 'Артур', 'Руслан', 'Анри', 'Дима', 'Рома', 'Гвидо', 'Марк']))
должен выводить:

Никто не оценил данную запись
Тимур оценил(а) данную запись
Тимур и Артур оценили данную запись
Тимур, Артур и Руслан оценили данную запись
Тимур, Артур и 2 других оценили данную запись
Тимур, Артур и 3 других оценили данную запись
Тимур, Артур и 6 других оценили данную запись
Примечание 1. Имена в формируемой и возвращаемой функцией строке должны располагаться в своем исходном порядке.

Примечание 2. Обратите внимание, что если в передаваемом в функцию списке более трех имен, то явно указываются лишь первые два из них.

Примечание 3. В тестирующую систему сдайте программу, содержащую только необходимую функцию likes(), но не код, вызывающий ее.

Примечание 4. Тестовые данные доступны по ссылке.

Sample Input 1:

print(likes(['Дима', 'Алиса']))
Sample Output 1:

Дима и Алиса оценили данную запись
Sample Input 2:

print(likes(['Эндрю', 'Тоби', 'Том']))
Sample Output 2:

Эндрю, Тоби и Том оценили данную запись
Sample Input 3:

print(likes([]))
Sample Output 3:

Никто не оценил данную запись
"""

def likes(lst):
    if not lst:
        return 'Никто не оценил данную запись'
    if len(lst) == 1:
        return f'{lst[0]} оценил(а) данную запись'
    if len(lst) == 2:
        return f'{lst[0]} и {lst[1]} оценили данную запись'
    if len(lst) == 3:
        return f'{lst[0]}, {lst[1]} и {lst[2]} оценили данную запись'
    return f'{lst[0]}, {lst[1]} и {len(lst)-2} других оценили данную запись'